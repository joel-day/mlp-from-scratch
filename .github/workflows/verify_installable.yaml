# Workflow
# Verify the project can be installed across different operating systems
name: Verify Installable

# Event
on:
  # Trigger on pull requests for the main & dev branches
  pull_request:
    # (open) new pull request, (sync) new commits are pushed to an existing pull reques
    types: [opened, synchronize]
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Each job is run in parallel
jobs:
  tests_linux:
  # GitHub-hosted virtual machine for linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
        # workflow-specific utilities
        # pulls repo code into the virtual machine
      - uses: actions/checkout@v4
        # install uv and manage Python versions
      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true

        # Runs directly on the virtual machine in your workflow
        # Install base dependencies, optional packages, all extras
      - name: Install the project root
        run: uv sync
      - name: Install all packages
        run: uv sync --all-packages
      - name: Install all packages and extras
        run: uv sync --all-packages --all-extras

  tests_mac:
  # GitHub-hosted virtual machine for mac
    runs-on: macos-latest
    strategy:
      matrix:
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
      - name: Install the project root
        run: uv sync
      - name: Install all packages
        run: uv sync --all-packages
      - name: Install all packages and extras
        run: uv sync --all-packages --all-extras

  tests_windows:
    # GitHub-hosted virtual machine for windows
    runs-on: windows-latest
    strategy:
      matrix:
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
      - name: Install the project root
        run: uv sync
      - name: Install all packages
        run: uv sync --all-packages
      - name: Install all packages and extras
        run: uv sync --all-packages --all-extras

  # macos_pytests:
  #   needs: tests_mac
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Install uv and set the python version
  #       uses: astral-sh/setup-uv@v5
  #       with:
  #         python-version: "3.11"
  #         enable-cache: true
  #     - name: Install the project root
  #       run: uv sync
  #     - name: Install all packages
  #       run: uv sync --all-packages
  #     - name: Install all packages and extras
  #       run: uv sync --all-packages --all-extras
  #     - name: Run the tests
  #       run: uv run pytest -m "not slow"

  # windows_pytests:
  #   needs: tests_windows
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Install uv and set the python version
  #       uses: astral-sh/setup-uv@v5
  #       with:
  #         python-version: "3.11"
  #         enable-cache: true
  #     - name: Install the project root
  #       run: uv sync
  #     - name: Install all packages
  #       run: uv sync --all-packages
  #     - name: Install all packages and extras
  #       run: uv sync --all-packages --all-extras
  #     - name: Run the tests
  #       run: uv run pytest -m "not slow"

  # linux_pytests:
  #   needs: tests_linux
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Install uv and set the python version
  #       uses: astral-sh/setup-uv@v5
  #       with:
  #         python-version: "3.11"
  #         enable-cache: true
  #     - name: Install the project root
  #       run: uv sync
  #     - name: Install all packages
  #       run: uv sync --all-packages
  #     - name: Install all packages and extras
  #       run: uv sync --all-packages --all-extras
  #     - name: Run the tests
  #       run: uv run pytest -m "not slow"
